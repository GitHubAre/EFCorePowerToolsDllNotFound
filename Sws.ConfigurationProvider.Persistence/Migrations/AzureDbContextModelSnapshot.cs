// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Sws.ConfigurationProvider.Persistence.Azure;

namespace Sws.ConfigurationProvider.Persistence.Migrations
{
    [DbContext(typeof(AzureDbContext))]
    partial class AzureDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sws.ConfigurationProvider.Core.Entities.Azure.AzureScaleSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AzureScaleSets");
                });

            modelBuilder.Entity("Sws.ConfigurationProvider.Core.Entities.Azure.AzureVm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzureName");

                    b.Property<int?>("AzureScaleSetId");

                    b.Property<string>("ComputerName");

                    b.Property<int>("OsType");

                    b.Property<string>("PrivateIp");

                    b.Property<string>("ResourceGroupName");

                    b.Property<int>("Status");

                    b.Property<string>("SubscriptionName");

                    b.HasKey("Id");

                    b.HasIndex("AzureScaleSetId");

                    b.ToTable("AzureVms");
                });

            modelBuilder.Entity("Sws.ConfigurationProvider.Core.Entities.Azure.AzureVmTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AzureVmId");

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AzureVmId");

                    b.ToTable("AzureVmTags");
                });

            modelBuilder.Entity("Sws.ConfigurationProvider.Core.Entities.Azure.StartAndStopRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AzureVmId");

                    b.Property<int>("VmActivityType");

                    b.HasKey("Id");

                    b.HasIndex("AzureVmId");

                    b.ToTable("StartAndStopRecords");
                });

            modelBuilder.Entity("Sws.ConfigurationProvider.Core.Entities.Azure.AzureVm", b =>
                {
                    b.HasOne("Sws.ConfigurationProvider.Core.Entities.Azure.AzureScaleSet", "AzureScaleSet")
                        .WithMany("AzureVms")
                        .HasForeignKey("AzureScaleSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sws.ConfigurationProvider.Core.Entities.Azure.AzureVmTag", b =>
                {
                    b.HasOne("Sws.ConfigurationProvider.Core.Entities.Azure.AzureVm", "AzureVm")
                        .WithMany("AzureVmTags")
                        .HasForeignKey("AzureVmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sws.ConfigurationProvider.Core.Entities.Azure.StartAndStopRecord", b =>
                {
                    b.HasOne("Sws.ConfigurationProvider.Core.Entities.Azure.AzureVm")
                        .WithMany("StartAndStopRecords")
                        .HasForeignKey("AzureVmId");
                });
#pragma warning restore 612, 618
        }
    }
}
